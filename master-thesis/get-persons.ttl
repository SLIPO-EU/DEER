@prefix : <urn:example:evaluation/ls1/> .
@prefix fcage: <http://w3id.org/fcage/> .
@prefix deer: <http://w3id.org/deer/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix geos: <http://www.opengis.net/ont/geosparql#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dbo: <http://dbpedia.org/ontology/> .
@prefix dbr: <http://dbpedia.org/resource/> .
@prefix dbp: <http://dbpedia.org/property/> .
@prefix foxo:  <http://ns.aksw.org/fox/ontology#> .


:dbp_persons
  a deer:SparqlModelReader ;
  deer:fromEndpoint <http://dbpedia.org/sparql> ;
  deer:useSparqlConstruct
    '''
      PREFIX owl: <http://www.w3.org/2002/07/owl#>
      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
      PREFIX foaf: <http://xmlns.com/foaf/0.1/>
      PREFIX dc: <http://purl.org/dc/elements/1.1/>
      PREFIX : <http://dbpedia.org/resource/>
      PREFIX dbo: <http://dbpedia.org/ontology/>
      PREFIX dbpedia2: <http://dbpedia.org/property/>
      PREFIX dbpedia: <http://dbpedia.org/>
      PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
      construct {
        ?p foaf:name ?name .
        ?p dbo:birthPlace ?simplePlaceName .
        ?p rdfs:comment ?comment .
        ?p dbo:producerOf ?m .
        ?p dbo:almaMater ?almaMater .
        ?p dbo:birthDate ?date .
      } where {
        ?p dbo:birthPlace :Germany .
        ?p foaf:name ?name .
        ?p dbo:birthPlace ?place .
        ?place a dbo:Town .
        ?place rdfs:label ?placeName .
        ?p rdfs:comment ?comment .
        FILTER (lang(?comment) = 'en') .
        FILTER (lang(?placeName) = 'en') .
        BIND (STR(?placeName) AS ?simplePlaceName) .
        OPTIONAL {
          ?m dbo:producer ?p .
          ?p dbo:almaMater ?almaMater .
          ?p dbo:birthDate ?date .
        }
      }
    ''' ;
.

:fox
  a deer:NEREnrichmentOperator ;
  fcage:hasInput ( :dbp_persons ) ;
  deer:literalProperty rdfs:comment ;
  deer:importProperty foxo:relatedTo ;
  deer:parallelism 10 ;
  deer:neType "all" ;
.


#:dbp_persons2
#  a deer:SparqlModelReader ;
#  deer:fromEndpoint <http://dbpedia.org/sparql> ;
#  deer:useSparqlConstruct
#    '''
#      PREFIX owl: <http://www.w3.org/2002/07/owl#>
#      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
#      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
#      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
#      PREFIX foaf: <http://xmlns.com/foaf/0.1/>
#      PREFIX dc: <http://purl.org/dc/elements/1.1/>
#      PREFIX : <http://dbpedia.org/resource/>
#      PREFIX dbo: <http://dbpedia.org/ontology/>
#      PREFIX dbpedia2: <http://dbpedia.org/property/>
#      PREFIX dbpedia: <http://dbpedia.org/>
#      PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
#      construct {
#        ?p dbo:birthPlace :Germany .
#        ?p foaf:name ?name .
#        ?p dbo:birthPlace ?place .
#        ?m dbo:producer ?p .
#        ?p dbo:almaMater ?almaMater .
#        ?p dbo:birthDate ?date .
#        ?p rdfs:comment ?comment .
#      } where {
#        ?p dbo:birthPlace :Germany .
#        ?p foaf:name ?name .
#        ?p dbo:birthPlace ?place .
#        ?m dbo:producer ?p .
#        ?p dbo:almaMater ?almaMater .
#        ?p dbo:birthDate ?date .
#        ?p rdfs:comment ?comment .
#        FILTER (lang(?comment) = 'en') .
#      }
#    ''' ;
#.

####
# Output Nodes
####

:write_input
  a deer:FileModelWriter ;
  fcage:hasInput ( :dbp_persons ) ;
  deer:outputFile "./data/dbp_persons.nt" ;
  deer:outputFormat "NT" ;
.

:write_ner_output
  a deer:FileModelWriter ;
  fcage:hasInput ( :fox ) ;
  deer:outputFile "./data/dbp_persons_ner.nt" ;
  deer:outputFormat "NT" ;
.